name: Python CI
on: [push, pull_request]
jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        include:
          - spark-version: 3.5.4
            scala-version: 2.12.18
            python-version: 3.9.19
    runs-on: ubuntu-22.04
    env:
      # define Java options for both official sbt and sbt-extras
      JAVA_OPTS: -Xms2048M -Xmx2048M -Xss6M -XX:ReservedCodeCacheSize=256M -Dfile.encoding=UTF-8
      JVM_OPTS:  -Xms2048M -Xmx2048M -Xss6M -XX:ReservedCodeCacheSize=256M -Dfile.encoding=UTF-8
      SPARK_VERSION: ${{ matrix.spark-version }}
      SCALA_VERSION: ${{ matrix.scala-version }}
    steps:
    - uses: actions/checkout@v4
    - uses: olafurpg/setup-scala@v13
      with:
        java-version: "openjdk@1.11"
    - uses: actions/cache@v4
      with:
        path: |
          ~/.ivy2/cache
        key: sbt-ivy-cache-spark-${{ matrix.spark-version}}-scala-${{ matrix.scala-version }}
    - uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install and configure Poetry
      uses: snok/install-poetry@v1
      with:
        version: 2.1.1
        virtualenvs-create: true
        virtualenvs-in-project: false
        installer-parallel: true
    - name: Build Python package and its dependencies
      working-directory: ./python
      run: |
        poetry install
    - name: Test
      working-directory: ./python
      run: |
        poetry run python -m unittest discover -s tests/

    - name: Test SparkConnect
      working-directory: ./python
      run: |
        export VENV_ROOT=$(poetry env info --path)
        $VENV_ROOT/bin/python dev/run_connect.sh
        export SPARK_CONNECT_MODE_ENABLED=1
        poetry run python -m unittest discover -s tests/
